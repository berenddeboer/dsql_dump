name: CI/CD

on:
  push:
    branches: [trunk]
  pull_request:
    branches: [trunk]

env:
  NODE_VERSION: '24'
  BUN_VERSION: 'latest'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies
        run: bun install

      - name: Lint
        run: npm run eslint

      - name: Type check
        run: bunx tsc --noEmit

  release:
    name: Release and Publish
    needs: test
    if: github.ref == 'refs/heads/trunk' && github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: write        # To push commits and tags
      id-token: write       # For OIDC/trusted publishing
      actions: read         # To read workflow information
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0      # Full history for conventional commits
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies
        run: bun install

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Check for changes since last release
        id: check-changes
        run: |
          # Get the latest tag, if any
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")

          if [ -z "$LATEST_TAG" ]; then
            echo "No previous releases found, proceeding with release"
            echo "has-changes=true" >> $GITHUB_OUTPUT
          else
            # Check if there are any commits since the last tag
            COMMITS_SINCE_TAG=$(git rev-list ${LATEST_TAG}..HEAD --count)
            if [ "$COMMITS_SINCE_TAG" -gt 0 ]; then
              echo "Found $COMMITS_SINCE_TAG commits since last release"
              echo "has-changes=true" >> $GITHUB_OUTPUT
            else
              echo "No commits since last release"
              echo "has-changes=false" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Create Release
        if: steps.check-changes.outputs.has-changes == 'true'
        run: npm run release

      - name: Get version
        if: steps.check-changes.outputs.has-changes == 'true'
        id: version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Push changes and tags
        if: steps.check-changes.outputs.has-changes == 'true'
        run: |
          git push origin trunk
          git push origin --tags

      - name: Publish to npm
        if: steps.check-changes.outputs.has-changes == 'true'
        run: npm run publish-all

      - name: Create GitHub Release
        if: steps.check-changes.outputs.has-changes == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
